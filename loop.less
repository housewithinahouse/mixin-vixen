@iterations: 30;

// helper class, will never show up in resulting css
// will be called as long the index is above 0
.loopingClass (@index) when (@index > 0) {

	// create the actual css selector, example will result in
	// .myclass_30, .myclass_28, .... , .myclass_1
	myclass_@{index} {
		// your resulting css
		my-property: -@index px;
	}

	// next iteration
	.loopingClass(@index - 1);
}

// end the loop when index is 0
.loopingClass (0) {}

// "call" the loopingClass the first time with highest value
.loopingClass (@iterations);



//not working yet....................
////////////////////////////////

@iterations: 100;

// helper class, will never show up in resulting css
// will be called as long the index is above 0
.loopingClass ((@color:rgba(0,0,0,.3),@stepX:1,@stepY:1,@blur:0,@index) when (@index == 100) {
}
.loopingClass (@color:rgba(0,0,0,.3),@stepX:1,@stepY:1,@blur:0,@index) when (@index > 0) {

	@var: "@{var}@{@index}px*@{stepX} @{index}px*@{stepY} @{blur} @{color}," 	
	.loopingClass(@color, @stepX, @stepY, @blur, @index - 1); // next iteration
}

// end the loop when index is 0
.loopingClass (0) {}

// "call" the loopingClass the first time with highest value
.loopingClass (@iterations);
